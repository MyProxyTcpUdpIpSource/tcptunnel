// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proxy_service.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Payload_LoadType int32

const (
	Payload_ACK  Payload_LoadType = 0
	Payload_Load Payload_LoadType = 1
)

var Payload_LoadType_name = map[int32]string{
	0: "ACK",
	1: "Load",
}

var Payload_LoadType_value = map[string]int32{
	"ACK":  0,
	"Load": 1,
}

func (x Payload_LoadType) String() string {
	return proto.EnumName(Payload_LoadType_name, int32(x))
}

func (Payload_LoadType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_34ca2fbc94d169de, []int{0, 0}
}

type Payload struct {
	Flag                 Payload_LoadType `protobuf:"varint,1,opt,name=flag,proto3,enum=proto.Payload_LoadType" json:"flag,omitempty"`
	Data                 []byte           `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ca2fbc94d169de, []int{0}
}

func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetFlag() Payload_LoadType {
	if m != nil {
		return m.Flag
	}
	return Payload_ACK
}

func (m *Payload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.Payload_LoadType", Payload_LoadType_name, Payload_LoadType_value)
	proto.RegisterType((*Payload)(nil), "proto.Payload")
}

func init() { proto.RegisterFile("proxy_service.proto", fileDescriptor_34ca2fbc94d169de) }

var fileDescriptor_34ca2fbc94d169de = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x28, 0xca, 0xaf,
	0xa8, 0x8c, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x05, 0x53, 0x4a, 0x99, 0x5c, 0xec, 0x01, 0x89, 0x95, 0x39, 0xf9, 0x89, 0x29, 0x42, 0xda,
	0x5c, 0x2c, 0x69, 0x39, 0x89, 0xe9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x7c, 0x46, 0xe2, 0x10, 0x75,
	0x7a, 0x50, 0x59, 0x3d, 0x9f, 0xfc, 0xc4, 0x94, 0x90, 0xca, 0x82, 0xd4, 0x20, 0xb0, 0x22, 0x21,
	0x21, 0x2e, 0x96, 0x94, 0xc4, 0x92, 0x44, 0x09, 0x26, 0x05, 0x46, 0x0d, 0x9e, 0x20, 0x30, 0x5b,
	0x49, 0x96, 0x8b, 0x03, 0xa6, 0x4a, 0x88, 0x9d, 0x8b, 0xd9, 0xd1, 0xd9, 0x5b, 0x80, 0x41, 0x88,
	0x83, 0x8b, 0x05, 0x24, 0x28, 0xc0, 0x68, 0x64, 0xc7, 0xc5, 0x13, 0x00, 0x72, 0x48, 0x30, 0xc4,
	0x1d, 0x42, 0x7a, 0x5c, 0x6c, 0xc1, 0x25, 0x45, 0xa9, 0x89, 0xb9, 0x42, 0x7c, 0xa8, 0x76, 0x49,
	0xa1, 0xf1, 0x95, 0x18, 0x34, 0x18, 0x0d, 0x18, 0x93, 0xd8, 0xc0, 0x82, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x87, 0xc9, 0xe5, 0x11, 0xcf, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProxyServiceClient is the client API for ProxyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyServiceClient interface {
	Stream(ctx context.Context, opts ...grpc.CallOption) (ProxyService_StreamClient, error)
}

type proxyServiceClient struct {
	cc *grpc.ClientConn
}

func NewProxyServiceClient(cc *grpc.ClientConn) ProxyServiceClient {
	return &proxyServiceClient{cc}
}

func (c *proxyServiceClient) Stream(ctx context.Context, opts ...grpc.CallOption) (ProxyService_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProxyService_serviceDesc.Streams[0], "/proto.ProxyService/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &proxyServiceStreamClient{stream}
	return x, nil
}

type ProxyService_StreamClient interface {
	Send(*Payload) error
	Recv() (*Payload, error)
	grpc.ClientStream
}

type proxyServiceStreamClient struct {
	grpc.ClientStream
}

func (x *proxyServiceStreamClient) Send(m *Payload) error {
	return x.ClientStream.SendMsg(m)
}

func (x *proxyServiceStreamClient) Recv() (*Payload, error) {
	m := new(Payload)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ProxyServiceServer is the server API for ProxyService service.
type ProxyServiceServer interface {
	Stream(ProxyService_StreamServer) error
}

func RegisterProxyServiceServer(s *grpc.Server, srv ProxyServiceServer) {
	s.RegisterService(&_ProxyService_serviceDesc, srv)
}

func _ProxyService_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProxyServiceServer).Stream(&proxyServiceStreamServer{stream})
}

type ProxyService_StreamServer interface {
	Send(*Payload) error
	Recv() (*Payload, error)
	grpc.ServerStream
}

type proxyServiceStreamServer struct {
	grpc.ServerStream
}

func (x *proxyServiceStreamServer) Send(m *Payload) error {
	return x.ServerStream.SendMsg(m)
}

func (x *proxyServiceStreamServer) Recv() (*Payload, error) {
	m := new(Payload)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ProxyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ProxyService",
	HandlerType: (*ProxyServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _ProxyService_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proxy_service.proto",
}
